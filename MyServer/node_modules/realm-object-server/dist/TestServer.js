"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const tmp = require("tmp");
const Realm = require("realm");
const fs = require("fs-extra");
const path = require("path");
const BasicServer_1 = require("./BasicServer");
class TestServer extends BasicServer_1.BasicServer {
    start(params = {}) {
        const _super = name => super[name];
        return __awaiter(this, void 0, void 0, function* () {
            yield fs.remove('./realm-object-server');
            yield fs.mkdirs('./realm-object-server/io.realm.object-server-utility/metadata/');
            const tmpDir = tmp.dirSync();
            return _super("start").call(this, Object.assign({
                dataPath: tmpDir.name,
                logLevel: 'off',
                port: 0,
                privateKeyPath: path.join(__dirname, "..", "fixtures", "keys", "auth.key"),
                publicKeyPath: path.join(__dirname, "..", "fixtures", "keys", "auth.pub"),
            }, params));
        });
    }
    shutdown() {
        const _super = name => super[name];
        return __awaiter(this, void 0, void 0, function* () {
            yield _super("shutdown").call(this);
            Realm.Sync.removeAllListeners();
            Realm.clearTestState();
        });
    }
    get url() {
        return `http://${this.address}`;
    }
    get secureUrl() {
        return `https://${this.secureAddress}`;
    }
}
exports.TestServer = TestServer;
//# sourceMappingURL=TestServer.js.map