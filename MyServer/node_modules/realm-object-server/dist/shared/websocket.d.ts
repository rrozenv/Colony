/// <reference types="uws" />
/// <reference types="node" />
import * as http from 'http';
import * as net from 'net';
import * as uws from 'uws';
import { Logger } from "./Logger";
export interface IAuthenticationMessage {
    action: 'authenticate';
    token: string;
}
export declare class ServiceWebSocketServer extends uws.Server {
    static AUTHENTICATION_TIMEOUT: number;
    private publicKey;
    private logger;
    constructor(publicKey: string, logger: Logger);
    setLogger(logger: Logger): void;
    upgradeAuthenticated(req: http.IncomingMessage, socket: net.Socket, head: ArrayBuffer, mustBeAdmin?: boolean): Promise<uws>;
    private isValidFirstMessage(message, mustBeAdmin);
    private upgradeWebSocket(req, socket, head);
    private timeout(timeout);
    private parseToken(token);
}
