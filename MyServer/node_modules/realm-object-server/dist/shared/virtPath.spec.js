"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const virtPath_1 = require("./virtPath");
const chai_1 = require("chai");
describe("mapVirtToRealmPath", () => {
    const cases = [
        ["/var/data", "", null],
        ["/var/data", "/", null],
        ["/var/data", "/.hidden", null],
        ["/var/data", "/hello/", null],
        ["/var/data", "/hello/../world", null],
        ["/var/data", "//", null],
        ["/var/data", "/hello/./world/", null],
        ["/var/data", "/hello/world.realm", null],
        ["/var/data", "/hello/world.realm.lock", null],
        ["/var/data", "/hello/world.realm.management", null],
        ["/var/data", "/привет", null],
        ["/var/data", "/cæt", null],
        ["/var/data", "/hello@world", null],
        ["/var/data", "/hello/world", "/var/data/hello/world.realm"],
        ["/var/data", "/hello", "/var/data/hello.realm"],
        ["/var/data", "/hello-._World123", "/var/data/hello-._World123.realm"],
    ];
    for (const [root, virt, out] of cases) {
        if (out) {
            it(`should resolve ${virt} to ${out}`, () => {
                chai_1.assert.strictEqual(virtPath_1.mapVirtToRealmPath(root, virt), out);
            });
        }
        else {
            it(`should reject ${virt}`, () => {
                chai_1.assert.isNull(virtPath_1.mapVirtToRealmPath(root, virt));
            });
        }
    }
});
//# sourceMappingURL=virtPath.spec.js.map