import { AuthService } from "../services/AuthService";
import { User } from "../realms/AdminRealm";
export interface IAuthProvider {
    name: string;
    start?: () => any;
    stop?: () => any;
    authenticateOrCreateUser: (body: any) => Promise<User>;
    update?: (user: User, body: any) => Promise<{}>;
    deleteUser?: (userId: string) => Promise<Boolean>;
}
export declare abstract class AuthProvider implements IAuthProvider {
    protected service: AuthService;
    readonly abstract name: any;
    start(): Promise<void>;
    stop(): Promise<void>;
    abstract authenticateOrCreateUser(body: any): Promise<User>;
    update(user: User, body: any): Promise<{}>;
    deleteUser(userId: string): Promise<Boolean>;
}
