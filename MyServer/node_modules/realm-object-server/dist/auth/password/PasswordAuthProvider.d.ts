import { User } from "../../realms/AdminRealm";
import { AuthProvider } from "../AuthProvider";
export interface PasswordAuthParams {
    autoCreateAdminUser?: boolean;
    saltLength?: number;
    iterations?: number;
    keyLength?: number;
    digest?: string;
}
export declare class PasswordAuthProvider extends AuthProvider {
    name: string;
    private autoCreateAdminUser;
    saltLength: number;
    iterations: number;
    keyLength: number;
    digest: string;
    constructor(params?: PasswordAuthParams);
    private passwordRealm;
    start(): Promise<void>;
    stop(): Promise<void>;
    authenticateOrCreateUser(body: any): Promise<User>;
    update(user: User, data: any): Promise<{}>;
    deleteUser(userId: string): Promise<Boolean>;
    private hashPassword(clearTextPassword, salt, iterations, keyLength, digest);
    private createSalt(saltLength);
    private comparePassword(candidatePassword, salt, iterations, keyLength, digest, hash);
    private attemptToRegister(username, password, isAdmin?);
    private attemptToLogin(username, password);
}
