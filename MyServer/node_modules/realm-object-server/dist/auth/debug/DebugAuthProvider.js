"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const AuthProvider_1 = require("../AuthProvider");
const errors = require("../../errors");
class DebugAuthProvider extends AuthProvider_1.AuthProvider {
    constructor() {
        super(...arguments);
        this.name = 'debug';
    }
    authenticateOrCreateUser(body) {
        return __awaiter(this, void 0, void 0, function* () {
            const userId = body.data;
            if (!userId) {
                throw new errors.realm.MissingParameters('userId');
            }
            const isAdmin = (userId === "admin" || (body["user_info"] && body["user_info"]["is_admin"] === true));
            return this.service.createOrUpdateUser(userId, "debug", isAdmin, null);
        });
    }
}
exports.DebugAuthProvider = DebugAuthProvider;
//# sourceMappingURL=DebugAuthProvider.js.map