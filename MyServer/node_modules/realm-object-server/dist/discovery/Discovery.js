"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
class DiscoveryRegisterError extends Error {
}
exports.DiscoveryRegisterError = DiscoveryRegisterError;
class Discovery {
    find(name, tags) {
        return __awaiter(this, void 0, void 0, function* () {
            const result = yield this.findAll(name, tags);
            const randomIndex = Math.floor(Math.random() * result.length);
            return result[randomIndex];
        });
    }
    waitForService(name, tags) {
        return __awaiter(this, void 0, void 0, function* () {
            return new Promise((resolve) => this.watchService(name, tags).on("available", resolve));
        });
    }
}
exports.Discovery = Discovery;
//# sourceMappingURL=Discovery.js.map