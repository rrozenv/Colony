"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const chai_1 = require("chai");
const superagent = require("superagent");
const TestServer_1 = require("../../TestServer");
describe('WelcomeService', function () {
    let server;
    let welcomeService;
    beforeEach(function () {
        return __awaiter(this, void 0, void 0, function* () {
            server = new TestServer_1.TestServer();
            yield server.start();
        });
    });
    afterEach(function () {
        return __awaiter(this, void 0, void 0, function* () {
            if (server) {
                yield server.shutdown();
            }
        });
    });
    it('should respond with HTML', () => __awaiter(this, void 0, void 0, function* () {
        const res = yield superagent.get(server.url);
        chai_1.expect(res.status).to.equal(200);
        chai_1.expect(res.type).to.equal('text/html');
        chai_1.expect(res.text).to.contain('<title>Realm Object Server</title>');
    }));
});
//# sourceMappingURL=WelcomeService.spec.js.map