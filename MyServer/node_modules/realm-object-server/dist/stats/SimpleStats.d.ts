import { StatsLabels } from "./StatsLabels";
import { StatsStorage } from "./StatsStorage";
import { StatsSink, StatsMetricParams, StatsCounter, StatsGauge } from "./StatsSink";
export declare type LabelledValue = {
    labels: StatsLabels;
    value: number;
};
export declare class SimpleStatsCounter implements StatsCounter {
    name: string;
    help: string;
    protected values: LabelledValue[];
    constructor(params: StatsMetricParams);
    inc(labels: StatsLabels, value?: number): void;
    reset(labels: StatsLabels, value?: number): void;
    getValuesWithLabelNames(labelNames: string[]): number[];
    getValues(labels: StatsLabels): number[];
    protected getValue(labels: StatsLabels): LabelledValue;
}
export declare class SimpleStatsGauge extends SimpleStatsCounter implements StatsGauge {
    dec(labels: StatsLabels, value?: number): void;
    set(labels: StatsLabels, value: number): void;
}
export declare class SimpleStats implements StatsSink, StatsStorage {
    private metrics;
    counter(params: StatsMetricParams): StatsCounter;
    gauge(params: StatsMetricParams): StatsGauge;
    getValues(name: string, labels: StatsLabels): Promise<number[]>;
    getValuesWithLabelNames(name: string, labelNames: string[]): Promise<number[]>;
}
