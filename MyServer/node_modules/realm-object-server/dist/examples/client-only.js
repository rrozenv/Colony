"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const Realm = require("realm");
const TickerSchema = {
    name: 'Ticker',
    properties: {
        'tickerSymbol': { type: 'string', optional: false, default: '' },
        'price': { type: 'float', optional: false, default: 0 },
        'companyName': { type: 'string', optional: false, default: '' }
    }
};
function main() {
    return __awaiter(this, void 0, void 0, function* () {
        const adminUser = yield Realm.Sync.User.login('http://localhost:9080', 'realm-admin', '');
        let index = 1;
        setInterval(() => {
            index = index + 1;
            const realm = new Realm({
                sync: {
                    user: adminUser,
                    url: `realm://127.0.0.1:9080/${index}/tickers`
                },
                schema: [TickerSchema]
            });
            realm.write(() => {
                realm.create('Ticker', {
                    tickerSymbol: 'RLM',
                    price: 75.64,
                    companyName: 'Realm'
                });
            });
            realm.close();
        }, 2000);
        console.log(adminUser.token);
    });
}
main();
//# sourceMappingURL=client-only.js.map