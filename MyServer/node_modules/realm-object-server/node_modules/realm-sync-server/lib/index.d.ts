export declare enum RealmSyncServerOperatingMode {
    MasterWithNoSlave = 0,
    MasterWithAsynchronousSlave = 1,
    MasterWithSynchronousSlave = 2,
    Slave = 3,
}
export interface IRealmSyncServerConfiguration {
    id?: string;
    dataPath: string;
    publicKeyPath: string;
    logCallback?: (level: number, message: string) => void;
    logLevel?: string;
    slaveStatusCallback?: (id: string, upToDate: boolean) => void;
    listenAddress?: string;
    listenPort?: string | number;
    statsEndpoint?: string;
    operatingMode?: RealmSyncServerOperatingMode;
    masterAddress?: string;
    masterPort?: string | number;
    masterSlaveSharedSecret?: string;
    featureToken?: string;
    enableDownloadLogCompaction?: boolean;
    maxDownloadSize?: number;
}
export interface IRealmSyncServerAddress {
    address: string;
    port: number;
}
export interface IRealmSyncServerConstructor {
    readonly prototype: {
        start(callback: (error?) => void): void;
        stop(callback: (error?) => void): void;
        address(): IRealmSyncServerAddress;
    };
    new (config: IRealmSyncServerConfiguration): any;
}
declare const RealmSyncServer_base: IRealmSyncServerConstructor;
export declare class RealmSyncServer extends RealmSyncServer_base {
    constructor(config: IRealmSyncServerConfiguration);
    start(): Promise<void>;
    stop(): Promise<void>;
    address(): any;
}
