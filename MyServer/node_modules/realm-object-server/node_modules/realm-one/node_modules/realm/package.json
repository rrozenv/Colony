{
  "_id": "realm@1.12.0",
  "_location": "/realm-object-server/realm-one/realm",
  "_phantomChildren": {},
  "_requiredBy": [
    "/realm-object-server/realm-one"
  ],
  "_shrinkwrap": null,
  "author": {
    "name": "Realm",
    "email": "help@realm.io",
    "url": "https://realm.io"
  },
  "binary": {
    "module_name": "realm",
    "module_path": "./compiled/{node_abi}_{platform}_{arch}/",
    "host": "https://static.realm.io",
    "remote_path": "/node-pre-gyp/{version}/"
  },
  "bugs": {
    "url": "https://github.com/realm/realm-js/issues"
  },
  "dependencies": {
    "extract-zip": "^1.6.0",
    "ini": "^1.3.4",
    "nan": "^2.3.3",
    "node-fetch": "^1.6.3",
    "node-pre-gyp": "^0.6.30",
    "prop-types": "^15.5.10",
    "request": "^2.78.0",
    "sync-request": "^3.0.1",
    "url-parse": "^1.1.7"
  },
  "description": "Realm is a mobile database: an alternative to SQLite and key-value stores",
  "devDependencies": {
    "babel-eslint": "^6.0.4",
    "eslint": "^3.2.2",
    "eslint-plugin-jasmine": "^2.1.0",
    "eslint-plugin-react": "^6.7.0",
    "jsdoc": "^3.4.0",
    "license-checker": "^8.0.3",
    "mockery": "^2.0.0",
    "rimraf": "^2.6.1",
    "semver": "^5.1.0",
    "shelljs": "^0.7.7",
    "shx": "^0.2.2"
  },
  "engines": {
    "node": ">=4"
  },
  "files": [
    "android",
    "lib",
    "react-native",
    "scripts",
    "src",
    "tests",
    "vendor",
    "binding.gyp",
    "realm.gypi",
    "target_defaults.gypi",
    "dependencies.list"
  ],
  "homepage": "https://realm.io",
  "keywords": [
    "database",
    "db",
    "react",
    "react-native",
    "persistence",
    "localstorage",
    "sqlite",
    "asyncstorage",
    "rocksdb",
    "leveldb",
    "realm"
  ],
  "license": "Apache-2.0",
  "main": "lib/index.js",
  "name": "realm",
  "optionalDependencies": {},
  "readme": "![Realm](https://github.com/realm/realm-js/raw/master/logo.png)\n\nRealm is a mobile database that runs directly inside phones, tablets or wearables.\nThis project hosts the JavaScript versions of [Realm](https://realm.io/). Currently we only support React Native (both iOS & Android) and Node.js (on MacOS and Linux) but we are considering adding support for Cordova/PhoneGap/Ionic as well.\n\n## Features\n\n* **Mobile-first:** Realm is the first database built from the ground up to run directly inside phones, tablets and wearables.\n* **Simple:** Data is directly [exposed as objects](https://realm.io/docs/javascript/latest/#models) and [queryable by code](https://realm.io/docs/javascript/latest/#queries), removing the need for ORM's riddled with performance & maintenance issues.\n* **Modern:** Realm supports relationships, generics, and vectorization.\n* **Fast:** Realm is faster than even raw SQLite on common operations, while maintaining an extremely rich feature set.\n\n## Getting Started\n\nPlease see the detailed instructions in our docs to use [Realm Javascript](https://realm.io/docs/javascript/latest/#getting-started).\n\n## Documentation\n\n### Realm React Native and Node.js\n\nThe documentation can be found at [realm.io/docs/javascript/latest](https://realm.io/docs/javascript/latest).  \nThe API reference is located at [realm.io/docs/javscript/latest/api](https://realm.io/docs/javascript/latest/api).\n\n## Getting Help\n\n- **Need help with your code?**: Look for previous questions on the  [#realm tag](https://stackoverflow.com/questions/tagged/realm?sort=newest) — or [ask a new question](https://stackoverflow.com/questions/ask?tags=realm). We actively monitor and answer questions on SO!\n- **Have a bug to report?** [Open an issue](https://github.com/realm/realm-js/issues/new). If possible, include the version of Realm, a full log, the Realm file, and a project that shows the issue.\n- **Have a feature request?** [Open an issue](https://github.com/realm/realm-js/issues/new). Tell us what the feature should do, and why you want the feature.\n- Sign up for our [**Community Newsletter**](https://go.pardot.com/l/210132/2017-04-26/3j74l) to get regular tips, learn about other use-cases and get alerted of blog posts and tutorials about Realm.\n\n## Building Realm\n\nIn case you don't want to use the precompiled version on npm, you can build Realm yourself from source. You’ll need an Internet connection the first time you build in order to download the core library.\n\nPrerequisites:\n- Node: 4.0 <= version < 7.0\n- Xcode 7.2+\n- Android SDK 23+\n- Android NDK 10e\n\nFirst clone this repository:\n\n```\ngit clone https://github.com/realm/realm-js.git\n```\n\nThen in the cloned directory:\n\n```\ngit submodule update --init --recursive\n```\n\n```Note: If you have cloned the repo previously make sure you remove your node_modules directory since it may contain stale dependencies which may cause the build to fail.```\n\nTo build for iOS:\n- Open `react-native/ios/RealmReact.xcodeproj`\n- Select `RealmReact.framework` as the build target\n- Build\n\nTo build for Android:\n- `cd react-native/android`\n- `./gradlew publishAndroid`\n- The compiled version of the Android module is here: `<project-root>/android`\n\nTo build for nodejs:\n\n```\nnpm install --build-from-source\n```\n\n - On Windows you will need to setup the environment for node-gyp\n\n    - Option 1: Install windows-build-tools node package\n\n         - Open an elevated command prompt (As Administrator)\n\n            ```\n            npm install -g --production windows-build-tools\n            ```  \n\n    * Option 2: Manually install and configure\n\n        - Check [node-gyp](https://github.com/nodejs/node-gyp) manual for custom installation procedure for Windows\n\n\n## Running the tests\n\nYou can use scripts/tests.sh to run the various tests.\nYou will need yarn installed on the machine.\n\ntest.sh options\n\n * eslint - lints the sources\n * react-tests - runs all React Native tests on iOS Simulator\n * react-tests-android runs all React Native Android tests on Android emulator\n * node - runs all tests for node\n * test-runners - checks supported tests runners are working correctly\n\nOn Windows some of these targets are available as npm commands.\n```\nnpm run eslint\nnpm run node-tests\nnpm run test-runners\n```\n\n## Debugging the tests\n\nYou can attach a debugger to react-native tests by passing \"Debug\" to the tests.sh script. A Chrome browser will open and connect to the react native application. Use the built-in Chrome Debugger to debug the code.\n\n```\n./tests.sh react-tests Debug\n```\n\nUsing Visual Studio Code\n\nYou can debug node tests using Visual Studio Code. Just use one of the launch configurations.\n\n## Code of Conduct\n\nThis project adheres to the Contributor Covenant [code of conduct](https://realm.io/conduct/).\nBy participating, you are expected to uphold this code. Please report unacceptable behavior to [info@realm.io](mailto:info+conduct@realm.io).\n\n## Contributing\n\nSee [CONTRIBUTING.md](https://github.com/realm/realm-js/blob/master/CONTRIBUTING.md) for more details!\n\n## License\n\nRealm JS is published under the Apache 2.0 license.\nRealm Core is also published under the Apache 2.0 license and is available\n[here](https://github.com/realm/realm-core).\n\n**This product is not being made available to any person located in Cuba, Iran,\nNorth Korea, Sudan, Syria or the Crimea region, or to any other person that is\nnot eligible to receive the product under U.S. law.**\n\n## Feedback\n\n**_If you use Realm and are happy with it, all we ask is that you please consider sending out a tweet mentioning [@realm](https://twitter.com/realm) to share your thoughts_**\n\n**_And if you don't like it, please let us know what you would like improved, so we can fix it!_**\n\n![analytics](https://ga-beacon.appspot.com/UA-50247013-2/realm-js/README?pixel)\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/realm/realm-js.git"
  },
  "rnpm": {
    "ios": {
      "project": "react-native/ios/RealmReact.xcodeproj",
      "sharedLibraries": [
        "libc++",
        "libz"
      ]
    }
  },
  "scripts": {
    "alias:win:apply": "git apply-win-symlink-aliases",
    "alias:win:revert": "git config alias.rm-symlink \"\" && git config alias.rm-symlinks \"\" && git config alias.checkout-symlinks \"\"",
    "build-changes": "node-pre-gyp build --fallback-to-build --debug --build-from-source",
    "check-environment": "node scripts/check-environment.js",
    "eslint": "npm install && npm run lint .",
    "get-version": "node -p process.env.npm_package_version",
    "install": "node-pre-gyp install --fallback-to-build",
    "isMac": "node -p \"if (process.platform == 'darwin') { process.exit(0); } else { process.exit(-1); }\"",
    "isWin": "node -p \"if (process.platform == 'win32') { process.exit(0); } else { process.exit(-1); }\"",
    "jsdoc": "npm install && npm run jsdoc:clean && jsdoc -u docs/tutorials -p package.json -c docs/conf.json",
    "jsdoc:clean": "rimraf ./docs/output",
    "license-check": "npm install && license-checker --exclude \"MIT,ISC,BSD,Apache-2.0,BSD-2-Clause,BSD-3-Clause,WTFPL,Unlicense,(MIT AND CC-BY-3.0)\" | node scripts/handle-license-check.js",
    "lint": "eslint",
    "node-tests": "cd tests && npm run test && cd ..",
    "postalias:win:apply": "git config --unset alias.apply-win-symlink-aliases",
    "postreact-tests-android": "npm run win-revert-symlinks",
    "prealias:win:apply": "git config alias.apply-win-symlink-aliases \"!f() { $(scripts/git-win-symlink-aliases); }; f\"",
    "prenode-tests": "npm install --build-from-source && cd tests && npm install",
    "prepublish": "echo prepublishing && node scripts/prepublish.js",
    "prereact-tests-android": "npm run isWin -s && npm run win-fix-symlinks || echo . ",
    "react-tests-android": "node scripts/react-tests-android.js || npm run postreact-tests-android",
    "rebuild-changes": "node-pre-gyp install --fallback-to-build --debug --build-from-source && cd tests && npm install",
    "set-version": "scripts/set-version.sh",
    "test": "scripts/test.sh",
    "test-runner:ava": "cd tests/test-runners/ava && npm install && npm test",
    "test-runner:jest": "cd tests/test-runners/jest && npm install && npm test",
    "test-runner:mocha": "cd tests/test-runners/mocha && npm install && npm test",
    "test-runners": "npm run test-runner:ava && npm run test-runner:mocha && npm run test-runner:jest",
    "testMac": "npm run isMac -s && echo this is mac || echo . ",
    "win-fix-symlinks": "npm run isWin -s && npm run alias:win:apply && git checkout-symlinks && git rm-symlinks || echo . ",
    "win-revert-symlinks": "npm run isWin -s &&  npm run alias:win:apply && git checkout-symlinks && npm run alias:win:revert || echo ."
  },
  "typings": "./lib/index.d.ts",
  "version": "1.12.0"
}
